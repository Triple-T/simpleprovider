apply plugin: 'java'
apply plugin: 'jacoco'
apply plugin: 'maven'
apply plugin: 'signing'

repositories {
    mavenCentral()
}
dependencies {
    compile 'com.google.android:android:4.1.1.4'

    testCompile 'junit:junit:4.11'
    testCompile 'org.robolectric:robolectric:2.2'
    testCompile 'org.mockito:mockito-core:1.9.5'
    testCompile 'org.easytesting:fest-assert-core:2.0M10'
}

jacocoTestReport {
    group = "Reporting"
    description = "Generate Jacoco coverage reports after running tests."
    additionalSourceDirs = files(sourceSets.main.allJava.srcDirs)
}

jar.dependsOn test

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives jar
    archives sourcesJar
    archives javadocJar
}

signing {
    required { isReleaseBuild() && gradle.taskGraph.hasTask("uploadArchives") }
    sign configurations.archives
}

def isReleaseBuild() {
    return !version.endsWith("SNAPSHOT")
}

def nexusUrl;
def nexusUsername = ''
def nexusPassword = ''

if (isReleaseBuild()) {
    nexusUrl = 'https://oss.sonatype.org/service/local/staging/deploy/maven2/'
} else {
    nexusUrl = 'https://oss.sonatype.org/content/repositories/snapshots/'
}

File propFile = file('signing.properties');
if (propFile.exists()) {
    propFile.withReader { reader ->
        def props = new Properties()
        props.load(reader)

        if (props.containsKey('NEXUS_USERNAME') && props.containsKey('NEXUS_PASSWORD')) {
            nexusUsername = props['NEXUS_USERNAME']
            nexusPassword = props['NEXUS_PASSWORD']
        }
    }
}

//println 'URL: ' + nexusUrl
//println 'Username: ' + nexusUsername
//println 'Password: ' + nexusPassword

group 'com.github.triplet'
version '1.0.0-SNAPSHOT'

afterEvaluate { project ->
    uploadArchives {
        repositories {
            mavenDeployer {
                beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

                pom.artifactId = 'simpleprovider'

                repository(url: nexusUrl) {
                    authentication(userName: nexusUsername, password: nexusPassword)
                }

                pom.project {
                    packaging 'jar'
                    name 'SimpleProvider Library'
                    description 'Create simple ContentProviders for Android Applications reducing boilerplate code'
                    url 'https://github.com/Triple-T/simpleprovider'

                    licenses {
                        license {
                            name 'The Apache Software License, Version 2.0'
                            url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                            distribution 'repo'
                        }
                    }

                    scm {
                        url 'https://github.com/Triple-T/simpleprovider'
                        connection 'scm:git:git@github.com:Triple-T/simpleprovider.git'
                        developerConnection 'scm:git:git@github.com:Triple-T/simpleprovider.git'
                    }

                    developers {
                        developer {
                            id 'bhurling'
                            name 'Bjoern Hurling'
                        }
                        developer {
                            id 'ChristianBecker'
                            name 'Christian Becker'
                        }
                    }
                }

                pom.whenConfigured { pom ->
                    pom.dependencies.removeAll { it.groupId == 'com.google.android' }
                }
            }
        }
    }
}
